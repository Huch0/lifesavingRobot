###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       12/Dec/2024  15:25:57
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\user\delay.c
#    Command line =  
#        -f C:\Users\pnu2\AppData\Local\Temp\EW717B.tmp
#        (C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\user\delay.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Debug\List
#        -o
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Libraries\CMSIS\DeviceSupport\
#        -I
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\user\
#        -I
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\user\inc\
#        -Ol -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Debug\List\delay.lst
#    Object file  =  
#        C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\Debug\Obj\delay.o
#
###############################################################################

C:\Users\pnu2\Documents\GitHub\lifesavingRobot\project_test\user\delay.c
      1          #include "delay.h"
      2          

   \                                 In section .text, align 2, keep-with-next
      3          void delay(int time)
      4          {
      5              int i;
      6              for (i = 0; i < time; i++)
   \                     delay: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xE000             B.N      ??delay_0
   \                     ??delay_1: (+1)
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??delay_0: (+1)
   \   00000006   0x4281             CMP      R1,R0
   \   00000008   0xDBFC             BLT.N    ??delay_1
      7              {
      8              }
      9          }
   \   0000000A   0x4770             BX       LR               ;; return
     10          

   \                                 In section .text, align 4, keep-with-next
     11          void delay_us(uint32_t us) {
     12              uint32_t count = us * (SystemCoreClock / 1000000) / 5;
   \                     delay_us: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable1
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0x....             LDR.N    R2,??DataTable1_1  ;; 0xf4240
   \   00000006   0xFBB1 0xF1F2      UDIV     R1,R1,R2
   \   0000000A   0x4348             MULS     R0,R1,R0
   \   0000000C   0x2105             MOVS     R1,#+5
   \   0000000E   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000012   0xE000             B.N      ??delay_us_0
     13              while (count--) {
     14                  __asm("nop");
   \                     ??delay_us_1: (+1)
   \   00000014   0xBF00             nop
     15              }
   \                     ??delay_us_0: (+1)
   \   00000016   0x0008             MOVS     R0,R1
   \   00000018   0x1E41             SUBS     R1,R0,#+1
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD1FA             BNE.N    ??delay_us_1
     16          }
   \   0000001E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x000F4240         DC32     0xf4240

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   delay
       0   delay_us


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      12  delay
      32  delay_us

 
 52 bytes in section .text
 
 52 bytes of CODE memory

Errors: none
Warnings: none
